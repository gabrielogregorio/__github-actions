name: Deploy

on:
  # Manualmente pelo workflow
  workflow_dispatch:
  # Push na branch main ou develop
  push:
    branches: [main, develop]

jobs:
  # Se o teste quebrar, o deploy falha
  job-name-test-ci-deploy:
    runs-on: ubuntu-20.04
  
  strategy:
    matrix:
      # Testar duas versões do node
      node-version: [14.x, 16.x]

  # Etapas da ação
  steps:
  # Checkout do código
  - uses: actions/checkout@v2
  # Configurar a matrix
  - name: Use Node.js ${{ matrix.node-version }}
  uses: actions/setup-node@v2
  with:
    node-version: ${{ matrix.node-version }}

  # parecido com o npm install, mas não altera os package
  - run: npm ci

  # Roda os testes
  - run: npm run test

deploy-test:
  # Depende dos testes
  needs: job-name-test-ci-deploy
  if: github.ref == 'refs/heads/develop'
  runs-on: ubuntu-20.04
  concurrency: deploy-to-test
  environment: test
  steps:
    - uses: actions/checkout@v2
    - name: Use Node.json 16.x
    - uses: actions/setup-node@v2
    with:
      node-version: 16.x
    - run: docker build -t github-actions
    - run: echo "Deploy test"

deploy-production:
  # Depende dos testes
  needs: job-name-test-ci-deploy
  if: github.ref == 'refs/heads/main'
  runs-on: ubuntu-20.04
  concurrency: deploy-to-production
  environment: production
  steps:
    - uses: actions/checkout@v2
    - name: Use Node.json 16.x
    - uses: actions/setup-node@v2
    with:
      node-version: 16.x
    - run: docker build -t github-actions
    - run: echo "Deploy production"
